package edu.black.model;

import java.util.ArrayList;
import java.util.List;

public class FeedbacksExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    public FeedbacksExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFeedbackidIsNull() {
            addCriterion("feedbackId is null");
            return (Criteria) this;
        }

        public Criteria andFeedbackidIsNotNull() {
            addCriterion("feedbackId is not null");
            return (Criteria) this;
        }

        public Criteria andFeedbackidEqualTo(Integer value) {
            addCriterion("feedbackId =", value, "feedbackid");
            return (Criteria) this;
        }

        public Criteria andFeedbackidNotEqualTo(Integer value) {
            addCriterion("feedbackId <>", value, "feedbackid");
            return (Criteria) this;
        }

        public Criteria andFeedbackidGreaterThan(Integer value) {
            addCriterion("feedbackId >", value, "feedbackid");
            return (Criteria) this;
        }

        public Criteria andFeedbackidGreaterThanOrEqualTo(Integer value) {
            addCriterion("feedbackId >=", value, "feedbackid");
            return (Criteria) this;
        }

        public Criteria andFeedbackidLessThan(Integer value) {
            addCriterion("feedbackId <", value, "feedbackid");
            return (Criteria) this;
        }

        public Criteria andFeedbackidLessThanOrEqualTo(Integer value) {
            addCriterion("feedbackId <=", value, "feedbackid");
            return (Criteria) this;
        }

        public Criteria andFeedbackidIn(List<Integer> values) {
            addCriterion("feedbackId in", values, "feedbackid");
            return (Criteria) this;
        }

        public Criteria andFeedbackidNotIn(List<Integer> values) {
            addCriterion("feedbackId not in", values, "feedbackid");
            return (Criteria) this;
        }

        public Criteria andFeedbackidBetween(Integer value1, Integer value2) {
            addCriterion("feedbackId between", value1, value2, "feedbackid");
            return (Criteria) this;
        }

        public Criteria andFeedbackidNotBetween(Integer value1, Integer value2) {
            addCriterion("feedbackId not between", value1, value2, "feedbackid");
            return (Criteria) this;
        }

        public Criteria andFeedbackclientidIsNull() {
            addCriterion("feedbackClientId is null");
            return (Criteria) this;
        }

        public Criteria andFeedbackclientidIsNotNull() {
            addCriterion("feedbackClientId is not null");
            return (Criteria) this;
        }

        public Criteria andFeedbackclientidEqualTo(Integer value) {
            addCriterion("feedbackClientId =", value, "feedbackclientid");
            return (Criteria) this;
        }

        public Criteria andFeedbackclientidNotEqualTo(Integer value) {
            addCriterion("feedbackClientId <>", value, "feedbackclientid");
            return (Criteria) this;
        }

        public Criteria andFeedbackclientidGreaterThan(Integer value) {
            addCriterion("feedbackClientId >", value, "feedbackclientid");
            return (Criteria) this;
        }

        public Criteria andFeedbackclientidGreaterThanOrEqualTo(Integer value) {
            addCriterion("feedbackClientId >=", value, "feedbackclientid");
            return (Criteria) this;
        }

        public Criteria andFeedbackclientidLessThan(Integer value) {
            addCriterion("feedbackClientId <", value, "feedbackclientid");
            return (Criteria) this;
        }

        public Criteria andFeedbackclientidLessThanOrEqualTo(Integer value) {
            addCriterion("feedbackClientId <=", value, "feedbackclientid");
            return (Criteria) this;
        }

        public Criteria andFeedbackclientidIn(List<Integer> values) {
            addCriterion("feedbackClientId in", values, "feedbackclientid");
            return (Criteria) this;
        }

        public Criteria andFeedbackclientidNotIn(List<Integer> values) {
            addCriterion("feedbackClientId not in", values, "feedbackclientid");
            return (Criteria) this;
        }

        public Criteria andFeedbackclientidBetween(Integer value1, Integer value2) {
            addCriterion("feedbackClientId between", value1, value2, "feedbackclientid");
            return (Criteria) this;
        }

        public Criteria andFeedbackclientidNotBetween(Integer value1, Integer value2) {
            addCriterion("feedbackClientId not between", value1, value2, "feedbackclientid");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateIsNull() {
            addCriterion("feedbackDate is null");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateIsNotNull() {
            addCriterion("feedbackDate is not null");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateEqualTo(String value) {
            addCriterion("feedbackDate =", value, "feedbackdate");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateNotEqualTo(String value) {
            addCriterion("feedbackDate <>", value, "feedbackdate");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateGreaterThan(String value) {
            addCriterion("feedbackDate >", value, "feedbackdate");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateGreaterThanOrEqualTo(String value) {
            addCriterion("feedbackDate >=", value, "feedbackdate");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateLessThan(String value) {
            addCriterion("feedbackDate <", value, "feedbackdate");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateLessThanOrEqualTo(String value) {
            addCriterion("feedbackDate <=", value, "feedbackdate");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateLike(String value) {
            addCriterion("feedbackDate like", value, "feedbackdate");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateNotLike(String value) {
            addCriterion("feedbackDate not like", value, "feedbackdate");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateIn(List<String> values) {
            addCriterion("feedbackDate in", values, "feedbackdate");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateNotIn(List<String> values) {
            addCriterion("feedbackDate not in", values, "feedbackdate");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateBetween(String value1, String value2) {
            addCriterion("feedbackDate between", value1, value2, "feedbackdate");
            return (Criteria) this;
        }

        public Criteria andFeedbackdateNotBetween(String value1, String value2) {
            addCriterion("feedbackDate not between", value1, value2, "feedbackdate");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventIsNull() {
            addCriterion("feedbackEvent is null");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventIsNotNull() {
            addCriterion("feedbackEvent is not null");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventEqualTo(String value) {
            addCriterion("feedbackEvent =", value, "feedbackevent");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventNotEqualTo(String value) {
            addCriterion("feedbackEvent <>", value, "feedbackevent");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventGreaterThan(String value) {
            addCriterion("feedbackEvent >", value, "feedbackevent");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventGreaterThanOrEqualTo(String value) {
            addCriterion("feedbackEvent >=", value, "feedbackevent");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventLessThan(String value) {
            addCriterion("feedbackEvent <", value, "feedbackevent");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventLessThanOrEqualTo(String value) {
            addCriterion("feedbackEvent <=", value, "feedbackevent");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventLike(String value) {
            addCriterion("feedbackEvent like", value, "feedbackevent");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventNotLike(String value) {
            addCriterion("feedbackEvent not like", value, "feedbackevent");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventIn(List<String> values) {
            addCriterion("feedbackEvent in", values, "feedbackevent");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventNotIn(List<String> values) {
            addCriterion("feedbackEvent not in", values, "feedbackevent");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventBetween(String value1, String value2) {
            addCriterion("feedbackEvent between", value1, value2, "feedbackevent");
            return (Criteria) this;
        }

        public Criteria andFeedbackeventNotBetween(String value1, String value2) {
            addCriterion("feedbackEvent not between", value1, value2, "feedbackevent");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogIsNull() {
            addCriterion("feedbackLog is null");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogIsNotNull() {
            addCriterion("feedbackLog is not null");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogEqualTo(String value) {
            addCriterion("feedbackLog =", value, "feedbacklog");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogNotEqualTo(String value) {
            addCriterion("feedbackLog <>", value, "feedbacklog");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogGreaterThan(String value) {
            addCriterion("feedbackLog >", value, "feedbacklog");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogGreaterThanOrEqualTo(String value) {
            addCriterion("feedbackLog >=", value, "feedbacklog");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogLessThan(String value) {
            addCriterion("feedbackLog <", value, "feedbacklog");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogLessThanOrEqualTo(String value) {
            addCriterion("feedbackLog <=", value, "feedbacklog");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogLike(String value) {
            addCriterion("feedbackLog like", value, "feedbacklog");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogNotLike(String value) {
            addCriterion("feedbackLog not like", value, "feedbacklog");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogIn(List<String> values) {
            addCriterion("feedbackLog in", values, "feedbacklog");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogNotIn(List<String> values) {
            addCriterion("feedbackLog not in", values, "feedbacklog");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogBetween(String value1, String value2) {
            addCriterion("feedbackLog between", value1, value2, "feedbacklog");
            return (Criteria) this;
        }

        public Criteria andFeedbacklogNotBetween(String value1, String value2) {
            addCriterion("feedbackLog not between", value1, value2, "feedbacklog");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table feedbacks
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 16 21:19:55 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table feedbacks
     *
     * @mbg.generated Mon Apr 16 21:19:55 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}